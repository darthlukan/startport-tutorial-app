{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp/module/types/starporttutorialapp/post.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?d966","webpack:///./src/App.vue?889f","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp/module/rest.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp/module/index.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fadd","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?0fc0","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?d490","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp/module/types/starporttutorialapp/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","basePost","creator","id","title","body","Post","string","uint64","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryClientParams","method","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","types","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","queryClient","initTxClient","vuexGetters","initQueryClient","getStructure","template","structure","fields","field","V1Order","V1State","getDefaultState","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","_Structure","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","QueryClientState","options","subscribe","all","client_id","SpVuexError","QueryClientStates","pagination","nextKey","next_values","prop","QueryConsensusState","revision_number","revision_height","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","msg","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","queryDenomTraces","queryDenomTrace","queryParams","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","getParams","QueryDenomTrace","QueryDenomTraces","QueryParams","sendMsgTransfer","MsgCreateVestingAccount","msgCreateVestingAccount","V1Beta1BondStatus","sendMsgCreateVestingAccount","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidators","queryDelegatorValidator","validatorAddr","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidators","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidators","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidators","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","V1Beta1ProposalStatus","V1Beta1VoteOption","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgSubmitProposal","MsgDeposit","MsgVote","msgSubmitProposal","msgDeposit","msgVote","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryPostAll","queryPost","MsgCreatePost","MsgUpdatePost","MsgDeletePost","msgCreatePost","msgUpdatePost","msgDeletePost","PostAll","getPost","getPostAll","QueryPost","QueryPostAll","sendMsgCreatePost","sendMsgUpdatePost","sendMsgDeletePost","CosmosCosmosSdkIbcCoreClientV1","load","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","DarthlukanStarportTutorialAppDarthlukanStarporttutorialappStarporttutorialapp","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","modulePath","moduleType","routerHistory","createWebHistory","routes","component","Index","Types","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseMsgCreatePost","baseMsgUpdatePost","baseMsgDeletePost","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.7bec54eb.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"darthlukan.starporttutorialapp.starporttutorialapp\";\nconst basePost = { creator: \"\", id: 0, title: \"\", body: \"\" };\nexport const Post = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(34).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t\t\t\t<SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=21017ee9\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=5695b462\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title starporttutorialapp/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPostAll\n         * @request GET:/darthlukan/starporttutorialapp/starporttutorialapp/post\n         */\n        this.queryPostAll = (query, params = {}) => this.request({\n            path: `/darthlukan/starporttutorialapp/starporttutorialapp/post`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPost\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/darthlukan/starporttutorialapp/starporttutorialapp/post/{id}\n         */\n        this.queryPost = (id, params = {}) => this.request({\n            path: `/darthlukan/starporttutorialapp/starporttutorialapp/post/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreatePost } from \"./types/starporttutorialapp/tx\";\nimport { MsgUpdatePost } from \"./types/starporttutorialapp/tx\";\nimport { MsgDeletePost } from \"./types/starporttutorialapp/tx\";\nconst types = [\n    [\"/darthlukan.starporttutorialapp.starporttutorialapp.MsgCreatePost\", MsgCreatePost],\n    [\"/darthlukan.starporttutorialapp.starporttutorialapp.MsgUpdatePost\", MsgUpdatePost],\n    [\"/darthlukan.starporttutorialapp.starporttutorialapp.MsgDeletePost\", MsgDeletePost],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreatePost: (data) => ({ typeUrl: \"/darthlukan.starporttutorialapp.starporttutorialapp.MsgCreatePost\", value: data }),\n        msgUpdatePost: (data) => ({ typeUrl: \"/darthlukan.starporttutorialapp.starporttutorialapp.MsgUpdatePost\", value: data }),\n        msgDeletePost: (data) => ({ typeUrl: \"/darthlukan.starporttutorialapp.starporttutorialapp.MsgDeletePost\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Post } from \"./module/types/starporttutorialapp/post\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Post: {},\n        PostAll: {},\n        _Structure: {\n            Post: getStructure(Post.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getPost: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Post[JSON.stringify(params)] ?? {};\n        },\n        getPostAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PostAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryPost({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPost(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPost(key.id)).data;\n                commit('QUERY', { query: 'Post', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPost', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPost']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPost', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPostAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPostAll(query)).data : (await (await initQueryClient(rootGetters)).queryPostAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPostAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PostAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPostAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPostAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPostAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgCreatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport DarthlukanStarportTutorialAppDarthlukanStarporttutorialappStarporttutorialapp from './darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp';\nexport default {\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    DarthlukanStarportTutorialAppDarthlukanStarporttutorialappStarporttutorialapp: load(DarthlukanStarportTutorialAppDarthlukanStarporttutorialappStarporttutorialapp, 'darthlukan.starporttutorialapp.starporttutorialapp'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"darthlukan.starporttutorialapp.starporttutorialapp\" moduleType=\"Post\"  />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=34e743b8\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"darthlukan.starporttutorialapp.starporttutorialapp\";\nconst baseMsgCreatePost = { creator: \"\", title: \"\", body: \"\" };\nexport const MsgCreatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(18).string(message.title);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(26).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.title = reader.string();\n                    break;\n                case 3:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.title !== undefined && (obj.title = message.title);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePostResponse = { id: 0 };\nexport const MsgCreatePostResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePost = { creator: \"\", id: 0, title: \"\", body: \"\" };\nexport const MsgUpdatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(34).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePostResponse = {};\nexport const MsgUpdatePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n};\nconst baseMsgDeletePost = { creator: \"\", id: 0 };\nexport const MsgDeletePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePostResponse = {};\nexport const MsgDeletePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreatePost(request) {\n        const data = MsgCreatePost.encode(request).finish();\n        const promise = this.rpc.request(\"darthlukan.starporttutorialapp.starporttutorialapp.Msg\", \"CreatePost\", data);\n        return promise.then((data) => MsgCreatePostResponse.decode(new Reader(data)));\n    }\n    UpdatePost(request) {\n        const data = MsgUpdatePost.encode(request).finish();\n        const promise = this.rpc.request(\"darthlukan.starporttutorialapp.starporttutorialapp.Msg\", \"UpdatePost\", data);\n        return promise.then((data) => MsgUpdatePostResponse.decode(new Reader(data)));\n    }\n    DeletePost(request) {\n        const data = MsgDeletePost.encode(request).finish();\n        const promise = this.rpc.request(\"darthlukan.starporttutorialapp.starporttutorialapp.Msg\", \"DeletePost\", data);\n        return promise.then((data) => MsgDeletePostResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}