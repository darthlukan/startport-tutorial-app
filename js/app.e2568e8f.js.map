{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp/module/types/starporttutorialapp/post.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?d966","webpack:///./src/App.vue?889f","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp/module/rest.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp/module/index.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.ibcdex/module/rest.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.ibcdex/module/index.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.ibcdex/module/types/ibcdex/packet.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.ibcdex/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fadd","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?0fc0","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?d490","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp/module/types/starporttutorialapp/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.ibcdex/module/types/ibcdex/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","basePost","creator","id","title","body","Post","string","uint64","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","V1Beta1ProposalStatus","V1Beta1VoteOption","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryParams","paramsType","method","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter","types","MsgSubmitProposal","MsgDeposit","MsgVote","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgSubmitProposal","msgDeposit","msgVote","queryClient","initTxClient","vuexGetters","initQueryClient","getStructure","template","structure","fields","field","getDefaultState","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","_Structure","TextProposal","DepositParams","VotingParams","TallyParams","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getProposal","getProposals","getVote","getVotes","getParams","getDeposit","getDeposits","getTallyResult","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","QueryProposal","options","subscribe","all","proposal_id","SpVuexError","QueryProposals","pagination","nextKey","next_values","prop","QueryVote","QueryVotes","QueryParams","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","msg","sendMsgDeposit","sendMsgVote","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","V1Beta1BondStatus","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidators","queryDelegatorValidator","validatorAddr","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidators","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidators","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidators","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","V1State","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","revision_number","revision_height","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","V1Order","sendMsgVerifyInvariant","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","queryPostAll","queryPost","MsgDeletePost","MsgCreatePost","MsgUpdatePost","msgDeletePost","msgCreatePost","msgUpdatePost","PostAll","getPost","getPostAll","QueryPost","QueryPostAll","sendMsgDeletePost","sendMsgCreatePost","sendMsgUpdatePost","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","MsgSendBuyOrder","msgSendBuyOrder","baseIbcdexPacketData","IbcdexPacketData","noData","NoData","buyOrderPacket","BuyOrderPacketData","baseNoData","_","baseBuyOrderPacketData","amountDenom","priceDenom","price","baseBuyOrderPacketAck","remainingAmount","purchase","BuyOrderPacketAck","sendMsgSendBuyOrder","CosmosCosmosSdkCosmosGovV1Beta1","load","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","DarthlukanStarportTutorialAppDarthlukanStarporttutorialappStarporttutorialapp","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkIbcCoreClientV1","DarthlukanStarportTutorialAppDarthlukanStarporttutorialappIbcdex","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","modulePath","moduleType","routerHistory","createWebHistory","routes","component","Index","Types","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseMsgCreatePost","baseMsgUpdatePost","baseMsgDeletePost","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSendBuyOrder","port","channelID","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.e2568e8f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"darthlukan.starporttutorialapp.starporttutorialapp\";\nconst basePost = { creator: \"\", id: 0, title: \"\", body: \"\" };\nexport const Post = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(34).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t\t\t\t<SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=21017ee9\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=5695b462\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title starporttutorialapp/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPostAll\n         * @request GET:/darthlukan/starporttutorialapp/starporttutorialapp/post\n         */\n        this.queryPostAll = (query, params = {}) => this.request({\n            path: `/darthlukan/starporttutorialapp/starporttutorialapp/post`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPost\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/darthlukan/starporttutorialapp/starporttutorialapp/post/{id}\n         */\n        this.queryPost = (id, params = {}) => this.request({\n            path: `/darthlukan/starporttutorialapp/starporttutorialapp/post/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDeletePost } from \"./types/starporttutorialapp/tx\";\nimport { MsgCreatePost } from \"./types/starporttutorialapp/tx\";\nimport { MsgUpdatePost } from \"./types/starporttutorialapp/tx\";\nconst types = [\n    [\"/darthlukan.starporttutorialapp.starporttutorialapp.MsgDeletePost\", MsgDeletePost],\n    [\"/darthlukan.starporttutorialapp.starporttutorialapp.MsgCreatePost\", MsgCreatePost],\n    [\"/darthlukan.starporttutorialapp.starporttutorialapp.MsgUpdatePost\", MsgUpdatePost],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDeletePost: (data) => ({ typeUrl: \"/darthlukan.starporttutorialapp.starporttutorialapp.MsgDeletePost\", value: data }),\n        msgCreatePost: (data) => ({ typeUrl: \"/darthlukan.starporttutorialapp.starporttutorialapp.MsgCreatePost\", value: data }),\n        msgUpdatePost: (data) => ({ typeUrl: \"/darthlukan.starporttutorialapp.starporttutorialapp.MsgUpdatePost\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Post } from \"./module/types/starporttutorialapp/post\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Post: {},\n        PostAll: {},\n        _Structure: {\n            Post: getStructure(Post.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getPost: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Post[JSON.stringify(params)] ?? {};\n        },\n        getPostAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PostAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryPost({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPost(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPost(key.id)).data;\n                commit('QUERY', { query: 'Post', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPost', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPost']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPost', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPostAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPostAll(query)).data : (await (await initQueryClient(rootGetters)).queryPostAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPostAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PostAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPostAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPostAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPostAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDeletePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDeletePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibcdex/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSendBuyOrder } from \"./types/ibcdex/tx\";\nconst types = [\n    [\"/darthlukan.starporttutorialapp.ibcdex.MsgSendBuyOrder\", MsgSendBuyOrder],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSendBuyOrder: (data) => ({ typeUrl: \"/darthlukan.starporttutorialapp.ibcdex.MsgSendBuyOrder\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"darthlukan.starporttutorialapp.ibcdex\";\nconst baseIbcdexPacketData = {};\nexport const IbcdexPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.noData !== undefined) {\n            NoData.encode(message.noData, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.buyOrderPacket !== undefined) {\n            BuyOrderPacketData.encode(message.buyOrderPacket, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIbcdexPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.noData = NoData.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.buyOrderPacket = BuyOrderPacketData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIbcdexPacketData };\n        if (object.noData !== undefined && object.noData !== null) {\n            message.noData = NoData.fromJSON(object.noData);\n        }\n        else {\n            message.noData = undefined;\n        }\n        if (object.buyOrderPacket !== undefined && object.buyOrderPacket !== null) {\n            message.buyOrderPacket = BuyOrderPacketData.fromJSON(object.buyOrderPacket);\n        }\n        else {\n            message.buyOrderPacket = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.noData !== undefined &&\n            (obj.noData = message.noData ? NoData.toJSON(message.noData) : undefined);\n        message.buyOrderPacket !== undefined &&\n            (obj.buyOrderPacket = message.buyOrderPacket\n                ? BuyOrderPacketData.toJSON(message.buyOrderPacket)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIbcdexPacketData };\n        if (object.noData !== undefined && object.noData !== null) {\n            message.noData = NoData.fromPartial(object.noData);\n        }\n        else {\n            message.noData = undefined;\n        }\n        if (object.buyOrderPacket !== undefined && object.buyOrderPacket !== null) {\n            message.buyOrderPacket = BuyOrderPacketData.fromPartial(object.buyOrderPacket);\n        }\n        else {\n            message.buyOrderPacket = undefined;\n        }\n        return message;\n    },\n};\nconst baseNoData = {};\nexport const NoData = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNoData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseNoData };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseNoData };\n        return message;\n    },\n};\nconst baseBuyOrderPacketData = {\n    amountDenom: \"\",\n    amount: 0,\n    priceDenom: \"\",\n    price: 0,\n};\nexport const BuyOrderPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.amountDenom !== \"\") {\n            writer.uint32(10).string(message.amountDenom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).int32(message.amount);\n        }\n        if (message.priceDenom !== \"\") {\n            writer.uint32(26).string(message.priceDenom);\n        }\n        if (message.price !== 0) {\n            writer.uint32(32).int32(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBuyOrderPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amountDenom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.int32();\n                    break;\n                case 3:\n                    message.priceDenom = reader.string();\n                    break;\n                case 4:\n                    message.price = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBuyOrderPacketData };\n        if (object.amountDenom !== undefined && object.amountDenom !== null) {\n            message.amountDenom = String(object.amountDenom);\n        }\n        else {\n            message.amountDenom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.priceDenom !== undefined && object.priceDenom !== null) {\n            message.priceDenom = String(object.priceDenom);\n        }\n        else {\n            message.priceDenom = \"\";\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.amountDenom !== undefined &&\n            (obj.amountDenom = message.amountDenom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.priceDenom !== undefined && (obj.priceDenom = message.priceDenom);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBuyOrderPacketData };\n        if (object.amountDenom !== undefined && object.amountDenom !== null) {\n            message.amountDenom = object.amountDenom;\n        }\n        else {\n            message.amountDenom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.priceDenom !== undefined && object.priceDenom !== null) {\n            message.priceDenom = object.priceDenom;\n        }\n        else {\n            message.priceDenom = \"\";\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n};\nconst baseBuyOrderPacketAck = { remainingAmount: 0, purchase: 0 };\nexport const BuyOrderPacketAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.remainingAmount !== 0) {\n            writer.uint32(8).int32(message.remainingAmount);\n        }\n        if (message.purchase !== 0) {\n            writer.uint32(16).int32(message.purchase);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBuyOrderPacketAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.remainingAmount = reader.int32();\n                    break;\n                case 2:\n                    message.purchase = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBuyOrderPacketAck };\n        if (object.remainingAmount !== undefined &&\n            object.remainingAmount !== null) {\n            message.remainingAmount = Number(object.remainingAmount);\n        }\n        else {\n            message.remainingAmount = 0;\n        }\n        if (object.purchase !== undefined && object.purchase !== null) {\n            message.purchase = Number(object.purchase);\n        }\n        else {\n            message.purchase = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.remainingAmount !== undefined &&\n            (obj.remainingAmount = message.remainingAmount);\n        message.purchase !== undefined && (obj.purchase = message.purchase);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBuyOrderPacketAck };\n        if (object.remainingAmount !== undefined &&\n            object.remainingAmount !== null) {\n            message.remainingAmount = object.remainingAmount;\n        }\n        else {\n            message.remainingAmount = 0;\n        }\n        if (object.purchase !== undefined && object.purchase !== null) {\n            message.purchase = object.purchase;\n        }\n        else {\n            message.purchase = 0;\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IbcdexPacketData } from \"./module/types/ibcdex/packet\";\nimport { NoData } from \"./module/types/ibcdex/packet\";\nimport { BuyOrderPacketData } from \"./module/types/ibcdex/packet\";\nimport { BuyOrderPacketAck } from \"./module/types/ibcdex/packet\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            IbcdexPacketData: getStructure(IbcdexPacketData.fromPartial({})),\n            NoData: getStructure(NoData.fromPartial({})),\n            BuyOrderPacketData: getStructure(BuyOrderPacketData.fromPartial({})),\n            BuyOrderPacketAck: getStructure(BuyOrderPacketAck.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgSendBuyOrder({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSendBuyOrder(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSendBuyOrder:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendBuyOrder:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSendBuyOrder({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSendBuyOrder(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSendBuyOrder:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendBuyOrder:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport DarthlukanStarportTutorialAppDarthlukanStarporttutorialappStarporttutorialapp from './darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.starporttutorialapp';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport DarthlukanStarportTutorialAppDarthlukanStarporttutorialappIbcdex from './darthlukan/starport-tutorial-app/darthlukan.starporttutorialapp.ibcdex';\nexport default {\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    DarthlukanStarportTutorialAppDarthlukanStarporttutorialappStarporttutorialapp: load(DarthlukanStarportTutorialAppDarthlukanStarporttutorialappStarporttutorialapp, 'darthlukan.starporttutorialapp.starporttutorialapp'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    DarthlukanStarportTutorialAppDarthlukanStarporttutorialappIbcdex: load(DarthlukanStarportTutorialAppDarthlukanStarporttutorialappIbcdex, 'darthlukan.starporttutorialapp.ibcdex'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"darthlukan.starporttutorialapp.starporttutorialapp\" moduleType=\"Post\"  />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=34e743b8\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"darthlukan.starporttutorialapp.starporttutorialapp\";\nconst baseMsgCreatePost = { creator: \"\", title: \"\", body: \"\" };\nexport const MsgCreatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(18).string(message.title);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(26).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.title = reader.string();\n                    break;\n                case 3:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.title !== undefined && (obj.title = message.title);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePostResponse = { id: 0 };\nexport const MsgCreatePostResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePost = { creator: \"\", id: 0, title: \"\", body: \"\" };\nexport const MsgUpdatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(34).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePostResponse = {};\nexport const MsgUpdatePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n};\nconst baseMsgDeletePost = { creator: \"\", id: 0 };\nexport const MsgDeletePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePostResponse = {};\nexport const MsgDeletePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreatePost(request) {\n        const data = MsgCreatePost.encode(request).finish();\n        const promise = this.rpc.request(\"darthlukan.starporttutorialapp.starporttutorialapp.Msg\", \"CreatePost\", data);\n        return promise.then((data) => MsgCreatePostResponse.decode(new Reader(data)));\n    }\n    UpdatePost(request) {\n        const data = MsgUpdatePost.encode(request).finish();\n        const promise = this.rpc.request(\"darthlukan.starporttutorialapp.starporttutorialapp.Msg\", \"UpdatePost\", data);\n        return promise.then((data) => MsgUpdatePostResponse.decode(new Reader(data)));\n    }\n    DeletePost(request) {\n        const data = MsgDeletePost.encode(request).finish();\n        const promise = this.rpc.request(\"darthlukan.starporttutorialapp.starporttutorialapp.Msg\", \"DeletePost\", data);\n        return promise.then((data) => MsgDeletePostResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"darthlukan.starporttutorialapp.ibcdex\";\nconst baseMsgSendBuyOrder = {\n    sender: \"\",\n    port: \"\",\n    channelID: \"\",\n    timeoutTimestamp: 0,\n    amountDenom: \"\",\n    amount: 0,\n    priceDenom: \"\",\n    price: 0,\n};\nexport const MsgSendBuyOrder = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.port !== \"\") {\n            writer.uint32(18).string(message.port);\n        }\n        if (message.channelID !== \"\") {\n            writer.uint32(26).string(message.channelID);\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(32).uint64(message.timeoutTimestamp);\n        }\n        if (message.amountDenom !== \"\") {\n            writer.uint32(42).string(message.amountDenom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(48).int32(message.amount);\n        }\n        if (message.priceDenom !== \"\") {\n            writer.uint32(58).string(message.priceDenom);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).int32(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendBuyOrder };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.port = reader.string();\n                    break;\n                case 3:\n                    message.channelID = reader.string();\n                    break;\n                case 4:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.amountDenom = reader.string();\n                    break;\n                case 6:\n                    message.amount = reader.int32();\n                    break;\n                case 7:\n                    message.priceDenom = reader.string();\n                    break;\n                case 8:\n                    message.price = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendBuyOrder };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.port !== undefined && object.port !== null) {\n            message.port = String(object.port);\n        }\n        else {\n            message.port = \"\";\n        }\n        if (object.channelID !== undefined && object.channelID !== null) {\n            message.channelID = String(object.channelID);\n        }\n        else {\n            message.channelID = \"\";\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        if (object.amountDenom !== undefined && object.amountDenom !== null) {\n            message.amountDenom = String(object.amountDenom);\n        }\n        else {\n            message.amountDenom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.priceDenom !== undefined && object.priceDenom !== null) {\n            message.priceDenom = String(object.priceDenom);\n        }\n        else {\n            message.priceDenom = \"\";\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.port !== undefined && (obj.port = message.port);\n        message.channelID !== undefined && (obj.channelID = message.channelID);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        message.amountDenom !== undefined &&\n            (obj.amountDenom = message.amountDenom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.priceDenom !== undefined && (obj.priceDenom = message.priceDenom);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendBuyOrder };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.port !== undefined && object.port !== null) {\n            message.port = object.port;\n        }\n        else {\n            message.port = \"\";\n        }\n        if (object.channelID !== undefined && object.channelID !== null) {\n            message.channelID = object.channelID;\n        }\n        else {\n            message.channelID = \"\";\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        if (object.amountDenom !== undefined && object.amountDenom !== null) {\n            message.amountDenom = object.amountDenom;\n        }\n        else {\n            message.amountDenom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.priceDenom !== undefined && object.priceDenom !== null) {\n            message.priceDenom = object.priceDenom;\n        }\n        else {\n            message.priceDenom = \"\";\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgSendBuyOrderResponse = {};\nexport const MsgSendBuyOrderResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSendBuyOrderResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSendBuyOrderResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSendBuyOrderResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SendBuyOrder(request) {\n        const data = MsgSendBuyOrder.encode(request).finish();\n        const promise = this.rpc.request(\"darthlukan.starporttutorialapp.ibcdex.Msg\", \"SendBuyOrder\", data);\n        return promise.then((data) => MsgSendBuyOrderResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}